class base__c1(yang.adata.MNode):
    foo: ?str
    foo: ?str

    def __init__(self, foo: ?str, foo: ?str):
        self._ns = "http://example.com/base"
        self.foo = foo
        self.foo = foo

    def to_gdata(self) -> yang.gdata.Node:
        res = yang.gdata.Container('c1', ns=self._ns)
        _foo = self.foo
        _foo = self.foo
        if _foo is not None:
            res.children['foo'] = yang.gdata.Leaf('foo', _foo, ns=self._ns)
        if _foo is not None:
            res.children['foo'] = yang.gdata.Leaf('foo', _foo, ns=self._ns)
        for child in res.children.values():
            child.parent = res
        return res

    @staticmethod
    def from_gdata(n: yang.gdata.Node) -> base__c1:
        return base__c1(foo=n.get_opt_str("foo"), foo=n.get_opt_str("foo"))

    @staticmethod
    def from_xml(n: xml.Node) -> base__c1:
        return base__c1(foo=yang.gdata.from_xml_opt_str(n, "foo"), foo=yang.gdata.from_xml_opt_str(n, "foo"))

