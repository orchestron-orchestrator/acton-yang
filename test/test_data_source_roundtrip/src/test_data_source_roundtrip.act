import diff
import file
import testing
import xml

import yang.gdata

import yang_foo
import test_data_classes

import xml_full_gdata
import xml_full_adata
import xml_full_adata_loose

def _test_xml_full():
    xml_out_full = xml_full_gdata.xml_full.to_xmlstr()
    xml_out_full_wrapped = "<data>\n{xml_out_full}</data>"
    testing.assertEqual(test_data_classes.xml_text_full, xml_out_full_wrapped)

def _test_gdata_full():
    xml_in = xml.decode(test_data_classes.xml_text_full)
    gd = yang_foo.from_xml(xml_in)
    testing.assertEqual(gd, xml_full_gdata.xml_full)

def _test_adata_full():
    ad = xml_full_adata.adata()
    xml_out_adata = ad.to_gdata().to_xmlstr()
    xml_out_adata_wrapped = "<data>\n{xml_out_adata}</data>"
    testing.assertEqual(test_data_classes.xml_text_full, xml_out_adata_wrapped)

def _test_adata_full_loose():
    ad = xml_full_adata_loose.adata()
    xml_out_adata = ad.to_gdata().to_xmlstr()
    xml_out_adata_wrapped = "<data>\n{xml_out_adata}</data>"
    testing.assertEqual(test_data_classes.xml_text_full, xml_out_adata_wrapped)

def _test_adata_loose_diff(t: testing.EnvT):
    """Golden test for tracking diff between .prsrc() output for "strict" and "loose" adata.
    """

    rfcap = file.ReadFileCap(file.FileCap(t.env.cap))
    adata_strict = file.ReadFile(
        rfcap,
        "src/xml_full_adata.act").read().decode()
    adata_loose = file.ReadFile(
        rfcap,
        "src/xml_full_adata_loose.act").read().decode()
    t.success(diff.diff(adata_strict, adata_loose))
