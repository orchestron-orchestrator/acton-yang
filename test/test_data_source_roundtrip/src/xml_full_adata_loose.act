from yang_foo_loose import *
from yang.identityref import Identityref

def adata():
    # Top node: /root
    ad = root()
    
    # Container: /c1
    ad.c1.f_l1 = 'foo-foo'
    ad.c1.l3 = 18446744073709551615
    ad.c1.l_empty = True
    ad.c1.ll_uint64 = [4, 42]
    ad.c1.ll_str = ['kava', 'ƒçaj']
    ad.c1.l_identityref = Identityref('fooy', ns='http://example.com/foo', mod='foo', pfx='f')
    ad.c1.ll_identityref = [Identityref('bary', ns='http://example.com/bar', mod='bar', pfx='bar')]
    ad.c1.l4 = 'foo-qux'
    ad.c1.bar_l1 = 'foo-bar'
    ad.c1.l2 = 'bar'
    
    # List /c1/li element: tuta
    li_element = ad.c1.li.create('tuta')
    li_element.val = 'baba'
    
    # P-container: /pc1
    pc1 = ad.create_pc1()
    
    # Container: /pc1/foo
    pc1.foo.l1 = [b'Hello Acton \xf0\x9f\xab\xa1']
    
    # P-container: /pc2
    pc2 = ad.create_pc2()
    
    # Container: /pc2/foo
    pc2.foo.l_mandatory = 'baz'
    
    # P-container: /pc3
    pc3 = ad.create_pc3()
    
    # Container: /pc3/level1
    pc3.level1.l1 = 'l1-foo'
    pc3.level1.l1_optional = 'l1-optional'
    
    # Container: /pc3/level1/level2
    pc3.level1.level2.l2 = 'l2-bar'
    pc3.level1.level2.l2_optional = 'l2-optional'
    
    # Container: /pc3/level1/level2/level3
    pc3.level1.level2.level3.l3 = 'l3-baz'
    pc3.level1.level2.level3.l3_optional = 'l3-optional'
    
    # Container: /c.dot
    ad.c_dot.l_dot1 = 'who put that here?!'
    
    # Container: /cc
    ad.cc.cake = 'cake'
    
    # Container: /conflict
    ad.f_conflict.f_foo = 'foo-foo'
    ad.f_conflict.bar_foo = 'foo-augmented-from-bar'
    
    # P-container: /conflict/f:inner
    inner = ad.f_conflict.create_f_inner()
    
    # P-container: /conflict/bar:inner
    inner = ad.f_conflict.create_bar_inner()
    
    # List /special element: False
    special_element = ad.special.create(False)
    
    # List /special element: True
    special_element = ad.special.create(True)
    
    # List /li-union element: first,4,b'Hello Acton \xf0\x9f\xab\xa1'
    li_union_element = ad.li_union.create('first', '4', b'Hello Acton \xf0\x9f\xab\xa1')
    
    # List /li-union element: second,unlimited,b'Hello Acton \xf0\x9f\xab\xa1'
    li_union_element = ad.li_union.create('second', 'unlimited', b'Hello Acton \xf0\x9f\xab\xa1')
    
    # List /li-union element: third,aGk=,b'Hello Acton \xf0\x9f\xab\xa1'
    li_union_element = ad.li_union.create('third', 'aGk=', b'Hello Acton \xf0\x9f\xab\xa1')
    
    # Container: /c2
    ad.c2.l1 = 'foo-qux'
    
    # Container: /conflict
    ad.bar_conflict.foo = 'foo-bar'
    return ad
