
import file

import yang

def yang_to_act(wfcap: file.WriteFileCap, yangs: list[str], filename: str) -> None:
    root = yang.compile(yangs)
    src = root.prdaclass()
    wf = file.WriteFile(wfcap, filename)
    wf.write(src.encode())
    await async wf.close()

ys_foo = """module foo {
    yang-version "1.1";
    namespace "http://example.com/foo";
    prefix "foo";
    container c1 {
        leaf l1 {
            type string;
        }
        leaf l3 {
            type uint64;
        }
        list li {
            key name;
            leaf name {
                type string;
            }
            leaf val {
                type string;
            }
        }
    }
    container pc1 {
        presence "p";
        container foo {
            leaf l1 {
                type string;
            }
        }
    }
}"""

ys_bar = """module bar {
    yang-version "1.1";
    namespace "http://example.com/bar";
    prefix "bar";
    import foo {
        prefix "foo";
    }
    augment /foo:c1 {
        leaf l2 {
            type string;
        }
    }
}"""

actor main(env: Env):
    wfcap = file.WriteFileCap(file.FileCap(env.cap))
    yang_to_act(wfcap, yangs=[ys_foo, ys_bar], filename="../test_data_classes/src/yang_foo.act")
    env.exit(0)
